  server {
    listen  4431 ssl;
    server_name  localhost;
    include ssl/ssl.conf;

    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") 
    {
      set $year $1;
      set $month $2;
      set $day $3;
    }
    #access_log  D:/data/MTApiGW.data/logs/access_mtrest_$year-$month-$day.log  combined;
    set_by_lua $MTAPIGW_DATA 'return os.getenv("MTAPIGW_DATA")';

    location = / {
        default_type text/html;
        content_by_lua_block {
            ngx.say("<html><head></head><body><p>hello, mtrest works</p></body></html>")
        }
    }
    
    location = /health {
        default_type text/html;
        content_by_lua_block {
            ngx.say("<html><head></head><body><p>hello, mtrest works</p></body></html>")
        }
    }

    location = /backend_health {
        default_type text/html;
        content_by_lua_block {
            local route = require "route"
            local health = require "health"
            local servers = route.get_share_data("mtrest_servers")
            local filter = route.get_share_data("health") or {}
            servers = health.filter_table(servers, filter["RestServerUri"])
            local result = health.check_health(servers, "/api/v2/")
            local html = health.format_table_html(result)
            local num, total = health.get_health_num(result)
            if num < total then
                ngx.status = ngx.HTTP_SERVICE_UNAVAILABLE
            end
            ngx.say(string.format("<html><head></head><body>health:%d/%d<br>%s</body></html>", num, total, html))
        }
    }

    location = /status {
        default_type text/html;
        content_by_lua_block {
            local route = require "route"
            local health = require "health"
            local servers = route.get_share_data("mtrest_servers")
            local result = health.check_health(servers, "/api/v2/")
            local html = health.format_table_html(result)
            ngx.say("<html><head></head><body>" .. html .. "</body></html>")
        }
    }    
    
    #internal use only for /status
    location ~ ^/proxy/(.*)$ {
        rewrite ^/proxy/(https?)://([^/]+)/(.*)$  /$3 break;
        proxy_pass $1://$2 ;
        proxy_set_header HOST $2;
        deny all;
    }
    
    location  / {
        set $target '';
        set $auth_info '';
        set $mt_user "-";
        set $auth_status '-';
        access_log  ${MTAPIGW_DATA}/logs/access_mtrest_$year-$month-$day.log  main;

        access_by_lua_block {
            local route = require "route"
            local mtrest_acl = route.get_share_data("mtrest_acl")
            local mtrest_servers = route.get_share_data("mtrest_servers")
            route.process_route(mtrest_servers, mtrest_acl)
        }
        
        proxy_pass $target;
    }


  }
